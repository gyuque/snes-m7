#------------------------------------------------------------------------------
#		メモリマップ
#------------------------------------------------------------------------------
MEMORY {
	ROMST:		start = $008000, size = $7fc0, type = ro, file = %O, fill = yes, define = yes;
	ROMINFO:	start = $00ffc0, size = $0040, type = ro, file = %O, fill = yes, define = yes;
	ZP:		    start = $000000, size = $0020, type = rw, define = yes;
	RAM:		start = $7e2000, size = $e000, type = rw, define = yes;
	STACK:		start = $000000, size = $2000, type = rw, define = yes;
	SRAM:		start = $006000, size = $2000, type = rw, define = yes;

	ROMv1:		start = $818000, size = $8000, fill = yes;  # <- added
	ROMv2:		start = $828000, size = $8000, fill = yes;  # <- added
	ROMv3:		start = $838000, size = $8000, fill = yes;  # <- added
	ROMv4:		start = $848000, size = $8000, fill = yes;  # <- added
	ROMv5:		start = $858000, size = $8000, fill = yes;  # <- added

	ROMx1:		start = $868000, size = $8000, fill = yes;  # <- added
	ROMx2:		start = $878000, size = $8000, fill = yes;  # <- added
	ROMx3:		start = $888000, size = $8000, fill = yes;  # <- added
	ROMx4:		start = $898000, size = $8000, fill = yes;  # <- added
	ROMx5:		start = $8A8000, size = $8000, fill = yes;  # <- added

	ROMPAD:		start = $8B8000, size = $28000,fill = yes;  # <- added
}
#------------------------------------------------------------------------------
#		セグメントマップ
#------------------------------------------------------------------------------
SEGMENTS {
	STARTUP:	load = ROMST,   type = ro,	define = yes;
	CARTINFO:	load = ROMINFO, type = ro,	define = yes;
	RODATA:		load = ROMST,   type = ro,	define = yes;
	DATA:		load = ROMST,   run = RAM,type = rw,	define = yes;
	BSS:		load = RAM,     type = bss,	define = yes;
	ZEROPAGE:	load = ZP,      type = zp;
	CODE:		load = ROMST,   type = ro,	define = yes;
	VISASSET1:	load = ROMv1, type = ro, define = yes;
	VISASSET2:	load = ROMv2, type = ro, define = yes;
	VISASSET3:	load = ROMv3, type = ro, define = yes;
	VISASSET4:	load = ROMv4, type = ro, define = yes;
	VISASSET5:	load = ROMv5, type = ro, define = yes;
	MISCASSET:	load = ROMx1,  type = ro, define = yes;
	HIRODATA4:	load = ROMx2,  type = ro, define = yes;
	HIRODATA5:	load = ROMx3,  type = ro, define = yes;
	HIRODATA6:	load = ROMx4,  type = ro, define = yes;
	ALTSNDS1:	load = ROMx5,  type = ro, define = yes;
	DONTUSE:	load = ROMPAD, type = ro, define = yes;
}
#------------------------------------------------------------------------------
#		
#------------------------------------------------------------------------------
FEATURES {
	CONDES: segment = RODATA,
		type = constructor,
		label = __CONSTRUCTOR_TABLE__,
		count = __CONSTRUCTOR_COUNT__;
	CONDES: segment = RODATA,
		type = destructor,
		label = __DESTRUCTOR_TABLE__,
		count = __DESTRUCTOR_COUNT__;
}

#------------------------------------------------------------------------------
#		
#------------------------------------------------------------------------------
SYMBOLS {
	__STACKSIZE__ = $0200;
}
